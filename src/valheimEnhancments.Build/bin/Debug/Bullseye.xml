<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bullseye</name>
    </assembly>
    <members>
        <member name="T:Bullseye.InvalidUsageException">
            <summary>
            Thrown when invalid arguments are passed when running or listing targets.
            </summary>
        </member>
        <member name="M:Bullseye.InvalidUsageException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Bullseye.InvalidUsageException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Bullseye.InvalidUsageException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:Bullseye.OptionDefinition">
            <summary>
            Defines an option.
            </summary>
        </member>
        <member name="M:Bullseye.OptionDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a new option definition.
            </summary>
            <param name="shortName">The short name of the option.</param>
            <param name="longName">The long name of the option.</param>
            <param name="description">The description of the option.</param>
        </member>
        <member name="P:Bullseye.OptionDefinition.ShortName">
            <summary>
            Gets the short name of the option.
            </summary>
        </member>
        <member name="P:Bullseye.OptionDefinition.LongName">
            <summary>
            Gets the long name of the option.
            </summary>
        </member>
        <member name="P:Bullseye.OptionDefinition.Description">
            <summary>
            Gets the description of the option.
            </summary>
        </member>
        <member name="T:Bullseye.Options">
            <summary>
            The options to use when running or listing targets.
            </summary>
        </member>
        <member name="P:Bullseye.Options.Definitions">
            <summary>
            Gets the definitions of options which can be used when running or listing targets.
            </summary>
        </member>
        <member name="M:Bullseye.Options.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:Bullseye.Options"/>.
            </summary>
        </member>
        <member name="M:Bullseye.Options.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Boolean}})">
            <summary>
            Constructs a new instance of <see cref="T:Bullseye.Options"/>.
            </summary>
            <param name="values">A list of named options and their values.</param>
        </member>
        <member name="M:Bullseye.Options.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts a list of argument strings into an instance of <see cref="T:Bullseye.Options"/> and a list of target names.
            </summary>
            <param name="args">A list of argument strings.</param>
            <returns>An instance of <see cref="T:Bullseye.Options"/> and a list of target names.</returns>
        </member>
        <member name="P:Bullseye.Options.Clear">
            <summary>
            Gets or sets a value indicating whether the console should be cleared before execution.
            </summary>
        </member>
        <member name="P:Bullseye.Options.DryRun">
            <summary>
            Gets or sets a value indicating whether to do a dry run without executing actions.
            </summary>
        </member>
        <member name="P:Bullseye.Options.ListDependencies">
            <summary>
            Gets or sets a value indicating whether to list all (or specified) targets and then exit.
            </summary>
        </member>
        <member name="P:Bullseye.Options.ListInputs">
            <summary>
            Gets or sets a value indicating whether to list all (or specified) targets and inputs and then exit.
            </summary>
        </member>
        <member name="P:Bullseye.Options.ListTargets">
            <summary>
            Gets or sets a value indicating whether to list all (or specified) targets and then exit.
            </summary>
        </member>
        <member name="P:Bullseye.Options.ListTree">
            <summary>
            Gets or sets a value indicating whether to list all (or specified) targets and dependency trees and then exit.
            </summary>
        </member>
        <member name="P:Bullseye.Options.NoColor">
            <summary>
            Gets or sets a value indicating whether to disable colored output.
            </summary>
        </member>
        <member name="P:Bullseye.Options.NoExtendedChars">
            <summary>
            Gets or sets a value indicating whether to disable extended characters.
            </summary>
        </member>
        <member name="P:Bullseye.Options.Parallel">
            <summary>
            Gets or sets a value indicating whether to run targets in parallel.
            </summary>
        </member>
        <member name="P:Bullseye.Options.SkipDependencies">
            <summary>
            Gets or sets a value indicating whether to run target's dependencies.
            </summary>
        </member>
        <member name="P:Bullseye.Options.Verbose">
            <summary>
            Gets or sets a value indicating whether to enable verbose output.
            </summary>
        </member>
        <member name="P:Bullseye.Options.Host">
            <summary>
            Gets or sets a value indicating whether to force the mode for a specific host environment (normally auto-detected).
            If the value is set to <see cref="F:Bullseye.Host.Unknown"/> (default), then no mode is forced.
            </summary>
        </member>
        <member name="P:Bullseye.Options.ShowHelp">
            <summary>
            Gets a value indicating whether to show help and exit.
            </summary>
        </member>
        <member name="P:Bullseye.Options.UnknownOptions">
            <summary>
            Gets the list of unknown options represented by the named values passed to the constructor.
            </summary>
        </member>
        <member name="T:Bullseye.TargetFailedException">
            <summary>
            Thrown when a target fails.
            </summary>
        </member>
        <member name="M:Bullseye.TargetFailedException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Bullseye.TargetFailedException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Bullseye.TargetFailedException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:Bullseye.Targets">
            <summary>
            Provides methods for defining and running targets.
            </summary>
            <summary>
            Provides methods for defining and running targets.
            </summary>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.String,System.Action)">
            <summary>
            Adds a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a target which depends on other targets.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Adds a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{System.Threading.Tasks.Task})">
            <summary>
            Adds a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Adds a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.Action)">
            <summary>
            Adds a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a target which depends on other targets.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Adds a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{System.Threading.Tasks.Task})">
            <summary>
            Adds a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add(System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Adds a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Adds a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Adds a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Adds a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Adds a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Adds a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Adds a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Adds a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Add``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Adds a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.RunAndExit(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunAndExit(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunAndExitAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunAndExitAsync(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunWithoutExiting(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets.
            In most cases, <see cref="M:Bullseye.Targets.RunAndExit(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)"/> should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunWithoutExiting(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets.
            In most cases, RunAndExit should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunWithoutExitingAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets.
            In most cases, <see cref="M:Bullseye.Targets.RunAndExitAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)"/> should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunWithoutExitingAsync(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the targets.
            In most cases, RunAndExitAsync should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.DependsOn(System.String[])">
            <summary>
            Cosmetic method for defining an array of <see cref="T:System.String"/>.
            </summary>
            <param name="dependencies">The names of the targets on which the current target depends.</param>
            <returns>The specified <paramref name="dependencies"/>.</returns>
        </member>
        <member name="M:Bullseye.Targets.ForEach``1(``0[])">
            <summary>
            Cosmetic method for defining an array of <typeparamref name="TInput"/>.
            </summary>
            <typeparam name="TInput">The type of input required by the action of the current target.</typeparam>
            <param name="inputs">The list of inputs, each to be passed to the action of the current target.</param>
            <returns>The specified <paramref name="inputs"/>.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsAndExit(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsAndExit(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets and then calls <see cref="M:System.Environment.Exit(System.Int32)"/>.
            Any code which follows a call to this method will not be executed.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsWithoutExiting(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets.
            In most cases, <see cref="M:Bullseye.Targets.RunTargetsAndExit(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)"/> should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsWithoutExiting(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets.
            In most cases, RunTargetsAndExit should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsWithoutExitingAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets.
            In most cases, <see cref="M:Bullseye.Targets.RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Exception,System.Boolean},System.String)"/> should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.RunTargetsWithoutExitingAsync(System.Collections.Generic.IEnumerable{System.String},Bullseye.Options,System.Func{System.Exception,System.Boolean},System.String)">
            <summary>
            Runs the previously specified targets.
            In most cases, RunTargetsAndExitAsync should be used instead of this method.
            This method should only be used if continued code execution after running targets is specifically required.
            </summary>
            <param name="targets">The targets to run or list.</param>
            <param name="options">The options to use when running or listing targets.</param>
            <param name="messageOnly">
            A predicate that is called when an exception is thrown.
            Return <c>true</c> to display only the exception message instead instead of the full exception details.
            </param>
            <param name="logPrefix">
            The prefix to use for log messages.
            If not specified or <c>null</c>, the name of the entry assembly will be used, as returned by <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/>.
            If the entry assembly is <c>null</c>, the default prefix of "Bullseye" is used.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous running of the targets.</returns>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.String,System.Action)">
            <summary>
            Defines a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Defines a target which depends on other targets.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Defines a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{System.Threading.Tasks.Task})">
            <summary>
            Defines a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Defines a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.Action)">
            <summary>
            Defines a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Defines a target which depends on other targets.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Defines a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{System.Threading.Tasks.Task})">
            <summary>
            Defines a target which depends on other targets and performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target(System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Defines a target which performs an action.
            </summary>
            <param name="name">The name of the target.</param>
            <param name="action">The action performed by the target.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Defines a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Defines a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Defines a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Defines a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="description">The description of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Defines a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Defines a target which depends on other targets and performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="dependsOn">The names of the targets on which the target depends.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Defines a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
        <member name="M:Bullseye.Targets.Target``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Defines a target which performs an action for each item in a list of inputs.
            </summary>
            <typeparam name="TInput">The type of input required by <paramref name="action"/>.</typeparam>
            <param name="name">The name of the target.</param>
            <param name="forEach">The list of inputs to pass to <paramref name="action"/>.</param>
            <param name="action">The action performed by the target for each input in <paramref name="forEach"/>.</param>
        </member>
    </members>
</doc>
